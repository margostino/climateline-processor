name: Publisher Job (floods)
on:
  schedule:
    - cron: '10 21 * * *'
    - cron: '20 3 * * *'
  workflow_dispatch:
    inputs:
      publishForced:
        description: 'Flag to force publisher regardless the configuration'
        type: publish_forced
        default: true
        required: true
      category:
        description: 'News Category to filter out'
        type: category
        required: true
        default: 'floods'
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

jobs:
  job:
    runs-on: ubuntu-latest
    steps:

      - name: Publish new articles (schedule)
        run: |
          CODE=`curl --write-out '%{http_code}' \
          --silent \
          --output /dev/null \
          --request GET \
          --header 'Authorization: Bearer ${{ secrets.CLIMATELINE_JOB_SECRET }}' \
          --header 'content-type: application/json' \
          --url "https://climateline-processor.vercel.app/api/publisher-job?category=$CATEGORY&publish_forced=$PUBLISH_FORCED"`          
          if [ $CODE != "200" ]; then 
            exit 1
          fi
        if: ${{ github.event_name == 'schedule' }}
        env:
          PUBLISH_FORCED: true
          CATEGORY: floods

      - name: Publish new articles (dispatch)
        run: |
          CODE=`curl --write-out '%{http_code}' \
          --silent \
          --output /dev/null \
          --request GET \
          --header 'Authorization: Bearer ${{ secrets.CLIMATELINE_JOB_SECRET }}' \
          --header 'content-type: application/json' \
          --url "https://climateline-processor.vercel.app/api/publisher-job?category=$CATEGORY&publish_forced=$PUBLISH_FORCED"`          
          if [ $CODE != "200" ]; then 
            exit 1
          fi
        if: ${{ github.event_name != 'schedule' }}
        env:
          PUBLISH_FORCED: ${{ inputs.publishForced }}
          CATEGORY: ${{ inputs.category }}

